// <auto-generated />
using Day2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day2.Migrations
{
    [DbContext(typeof(DBContextCourse))]
    partial class DBContextCourseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Day2.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Mindegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentID = 2,
                            Grade = 100,
                            Mindegree = 50,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentID = 1,
                            Grade = 100,
                            Mindegree = 60,
                            Name = "Css"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentID = 2,
                            Grade = 100,
                            Mindegree = 50,
                            Name = "Linq"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentID = 3,
                            Grade = 100,
                            Mindegree = 70,
                            Name = "JS"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentID = 4,
                            Grade = 100,
                            Mindegree = 50,
                            Name = "HTML"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentID = 1,
                            Grade = 100,
                            Mindegree = 50,
                            Name = "Bootstrap"
                        });
                });

            modelBuilder.Entity("Day2.Models.CourseResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("TraineeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("TraineeID");

                    b.ToTable("CourseResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseID = 1,
                            Degree = 80,
                            TraineeID = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseID = 2,
                            Degree = 86,
                            TraineeID = 5
                        },
                        new
                        {
                            Id = 3,
                            CourseID = 3,
                            Degree = 75,
                            TraineeID = 4
                        },
                        new
                        {
                            Id = 4,
                            CourseID = 2,
                            Degree = 70,
                            TraineeID = 5
                        },
                        new
                        {
                            Id = 5,
                            CourseID = 4,
                            Degree = 92,
                            TraineeID = 3
                        },
                        new
                        {
                            Id = 6,
                            CourseID = 1,
                            Degree = 87,
                            TraineeID = 2
                        });
                });

            modelBuilder.Entity("Day2.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            manager = "Mohamed",
                            name = "MIS"
                        },
                        new
                        {
                            Id = 2,
                            manager = "Ahmed",
                            name = "CS"
                        },
                        new
                        {
                            Id = 3,
                            manager = "sara",
                            name = "IT"
                        },
                        new
                        {
                            Id = 4,
                            manager = "ali",
                            name = "IS"
                        });
                });

            modelBuilder.Entity("Day2.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Imageurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Mansoura",
                            CourseID = 1,
                            DepartmentID = 1,
                            Imageurl = "4.jpg",
                            Name = "Mohamed"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Mansoura",
                            CourseID = 3,
                            DepartmentID = 2,
                            Imageurl = "1.jpg",
                            Name = "Yousef"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tanta",
                            CourseID = 2,
                            DepartmentID = 2,
                            Imageurl = "4.jpg",
                            Name = "Nagey"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Mansoura",
                            CourseID = 1,
                            DepartmentID = 3,
                            Imageurl = "1.jpg",
                            Name = "Reham"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Mahala",
                            CourseID = 4,
                            DepartmentID = 1,
                            Imageurl = "4.jpg",
                            Name = "Mahmoud"
                        });
                });

            modelBuilder.Entity("Day2.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Imageurl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Mansoura",
                            DepartmentID = 1,
                            Grade = 80,
                            Imageurl = "4.jpg",
                            Name = "Ahmed"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Mansoura",
                            DepartmentID = 2,
                            Grade = 68,
                            Imageurl = "1.jpg",
                            Name = "Mohamed"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tanta",
                            DepartmentID = 2,
                            Grade = 92,
                            Imageurl = "4.jpg",
                            Name = "Mahmoud"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Cairo",
                            DepartmentID = 1,
                            Grade = 75,
                            Imageurl = "1.jpg",
                            Name = "Yara"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Mansoura",
                            DepartmentID = 1,
                            Grade = 90,
                            Imageurl = "4.jpg",
                            Name = "Nadeen"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Mahala",
                            DepartmentID = 3,
                            Grade = 80,
                            Imageurl = "1.jpg",
                            Name = "Nora"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Mansoura",
                            DepartmentID = 4,
                            Grade = 88,
                            Imageurl = "4.jpg",
                            Name = "Hend"
                        });
                });

            modelBuilder.Entity("Day2.Models.Course", b =>
                {
                    b.HasOne("Day2.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day2.Models.CourseResult", b =>
                {
                    b.HasOne("Day2.Models.Course", "Courses")
                        .WithMany("CourseResults")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day2.Models.Trainee", "Trainees")
                        .WithMany("CourseResults")
                        .HasForeignKey("TraineeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("Day2.Models.Instructor", b =>
                {
                    b.HasOne("Day2.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day2.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day2.Models.Trainee", b =>
                {
                    b.HasOne("Day2.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day2.Models.Course", b =>
                {
                    b.Navigation("CourseResults");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("Day2.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Day2.Models.Trainee", b =>
                {
                    b.Navigation("CourseResults");
                });
#pragma warning restore 612, 618
        }
    }
}
